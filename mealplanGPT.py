import streamlit as st #imports streamlit
from openai import OpenAI
client = OpenAI()
import os
from dotenv import load_dotenv, find_dotenv
load_dotenv(find_dotenv(), override = True)

os.getenv('OPEN_API_KEY')

def create_meals(ingredients, kcal):
    prompt = f'''Create a healthy daily meal plan for breakfast, lunch, and dinner based on the following ingredients: {ingredients}. Explain each recipe.
    The total daily intake of calories should equal to {kcal}. Assign a suggestive and concise title to each meal. Your answer should include 'Titles:' and spacing.
    Your answer also must provide the total calories of each meal, and the macros.'''

    #print(prompt)
    messages = [
        {'role': 'system', 'content': 'you are a talented cook.'},
        {'role': 'user', 'content': prompt}
    ]

    response = client.chat.completions.create(
    model = 'gpt-3.5-turbo',
    messages= messages,
    temperature=1,
    max_tokens=2000,
    n=1

    )

    if not ingredients or not calories:
        st.text("Error: Both ingredients and calories must be provided.")
        return None
    else:
       return response.choices[0].message.content



st.set_page_config(
    page_icon='ðŸ¤–',  # Custom favicon, you can use a URL or an emoji
    layout='wide',   # Choose 'wide' or 'centered' layout
)
#Creates a title
st.subheader('Your Meal plan Generated By AI ðŸ¤–:')

with st.sidebar:
    
    st.image('img1.png', width=200)
    st.header(' AI Meal Plan Generator')
    api_key = st.text_input('OpenAI API Key:', type='password')
    if api_key:
        os.environ['OPENAI_API_KEY']= api_key

    
    ingredients = st.text_input(label = 'Provide a list of ingredients separated by commas:')
    calories = st.text_input(label = 'Provide the number of calories:')
    submit_button= st.button('Submit')




if submit_button:
    with st.spinner('Generating your meal plan, please wait...'):
     output = create_meals(ingredients,calories)
     st.text(output)